name: CI Quality Gate Submodule

on:
  workflow_call:
    secrets:
      MINIO_BUCKET_NAME:
        required: false
      MINIO_REGION:
        required: false
      MINIO_ENDPOINT:
        required: false
      MINIO_ACCESS_KEY_ID:
        required: false
      MINIO_SECRET_ACCESS_KEY:
        required: false

env:
  LLM_MODEL_URL: https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF/resolve/main/mistral-7b-instruct-v0.2.Q4_K_M.gguf
  EMBEDDING_MODEL_URL: https://catalog.jan.ai/dist/models/embeds/nomic-embed-text-v1.5.f16.gguf
  VULKAN_VERSION: 1.3.261.1

jobs:
  build-and-test:
    runs-on: ${{ matrix.runs-on }}
    if: startsWith(github.head_ref, 'update-submodule')
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "linux"
            name: "amd64-avx2"
            runs-on: "ubuntu-20-04"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_NATIVE=OFF -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: true
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-noavx"
            runs-on: "ubuntu-20-04"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX=OFF -DGGML_AVX2=OFF -DGGML_FMA=OFF -DGGML_NATIVE=OFF -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx"
            runs-on: "ubuntu-20-04"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx512"
            runs-on: "ubuntu-20-04"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-vulkan"
            runs-on: "ubuntu-22-04"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_VULKAN=ON -DGGML_NATIVE=OFF -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: true
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-noavx-cuda-11-7"
            runs-on: "ubuntu-20-04-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX=OFF -DGGML_FMA=OFF -DBUILD_SHARED_LIBS=OFF -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx2-cuda-11-7"
            runs-on: "ubuntu-20-04-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx-cuda-11-7"
            runs-on: "ubuntu-20-04-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx512-cuda-11-7"
            runs-on: "ubuntu-20-04-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-noavx-cuda-12-0"
            runs-on: "ubuntu-20-04-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX=OFF -DGGML_FMA=OFF -DGGML_AVX2=OFF -DBUILD_SHARED_LIBS=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx2-cuda-12-0"
            runs-on: "ubuntu-20-04-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx-cuda-12-0"
            runs-on: "ubuntu-20-04-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "linux"
            name: "amd64-avx512-cuda-12-0"
            runs-on: "ubuntu-20-04-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DGGML_CUDA=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_BUILD_TYPE='Release' -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: "/tmp/sccache.conf"
          - os: "mac"
            name: "amd64"
            runs-on: "macos-13"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_METAL=OFF"
            run-e2e: true
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "mac"
            name: "arm64"
            runs-on: "macos-silicon"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_METAL_EMBED_LIBRARY=ON"
            run-e2e: true
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-avx2"
            runs-on: "windows-2019"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DLLAMA_BLAS=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -GNinja"
            run-e2e: true
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-noavx"
            runs-on: "windows-2019"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DBUILD_SHARED_LIBS=OFF -DGGML_AVX=OFF -DGGML_AVX2=OFF -DGGML_FMA=OFF -DGGML_NATIVE=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -GNinja"
            run-e2e: false
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-avx"
            runs-on: "windows-2019"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DLLAMA_BLAS=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -GNinja"
            run-e2e: true
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-avx512"
            runs-on: "windows-2019"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DLLAMA_BLAS=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -GNinja"
            run-e2e: false
            vulkan: false
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-vulkan"
            runs-on: "windows-2019"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_VULKAN=ON -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -GNinja"
            run-e2e: false
            vulkan: true
            sccache: false
            sccache-conf-path: ""
          - os: "windows"
            name: "amd64-noavx-cuda-12-0"
            runs-on: "windows-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX=OFF -DGGML_AVX2=OFF -DGGML_FMA=OFF -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx2-cuda-12-0"
            runs-on: "windows-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx-cuda-12-0"
            runs-on: "windows-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx512-cuda-12-0"
            runs-on: "windows-cuda-12-0"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-noavx-cuda-11-7"
            runs-on: "windows-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX=OFF -DGGML_AVX2=OFF -DGGML_FMA=OFF -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx2-cuda-11-7"
            runs-on: "windows-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx-cuda-11-7"
            runs-on: "windows-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX2=OFF -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'
          - os: "windows"
            name: "amd64-avx512-cuda-11-7"
            runs-on: "windows-cuda-11-7"
            cmake-flags: "-DCORTEXLLAMA_VERSION=${{github.event.pull_request.head.sha}} -DGGML_AVX512=ON -DGGML_NATIVE=OFF -DLLAMA_BUILD_SERVER=ON -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE='Release' -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CUDA_COMPILER_LAUNCHER=sccache -GNinja"
            run-e2e: false
            vulkan: false
            sccache: true
            sccache-conf-path: 'C:\sccache.conf'

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Prepare Vulkan SDK Linux
        if: ${{ matrix.vulkan && (matrix.os == 'linux') }}
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt-get update -y
          sudo apt-get install -y build-essential vulkan-sdk

      - name: Prepare Vulkan SDK Windows
        if: ${{ matrix.vulkan && (matrix.os == 'windows') }}
        run: |
          curl.exe -o $env:RUNNER_TEMP/VulkanSDK-Installer.exe -L "https://sdk.lunarg.com/sdk/download/${env:VULKAN_VERSION}/windows/VulkanSDK-${env:VULKAN_VERSION}-Installer.exe"
          & "$env:RUNNER_TEMP\VulkanSDK-Installer.exe" --accept-licenses --default-answer --confirm-command install
          Add-Content $env:GITHUB_ENV "VULKAN_SDK=C:\VulkanSDK\${env:VULKAN_VERSION}"
          Add-Content $env:GITHUB_PATH "C:\VulkanSDK\${env:VULKAN_VERSION}\bin"

      - name: create sccache.conf
        if: ${{ matrix.sccache }}
        run: |
          echo "[cache.s3]" > ${{ matrix.sccache-conf-path }}
          echo 'bucket = "${{ secrets.MINIO_BUCKET_NAME }}"' >> ${{ matrix.sccache-conf-path }}
          echo 'endpoint = "${{ secrets.MINIO_ENDPOINT }}"' >> ${{ matrix.sccache-conf-path }}
          echo 'key_prefix = "${{ matrix.os }}-${{ matrix.name }}"' >> ${{ matrix.sccache-conf-path }}
          echo 'use_ssl = false' >> ${{ matrix.sccache-conf-path }}
          echo 'server_side_encryption = false' >> ${{ matrix.sccache-conf-path }}
          echo 'no_credentials = false' >> ${{ matrix.sccache-conf-path }}

      - name: Install choco on Windows
        if: runner.os == 'Windows'
        run: |
          choco install make sccache ninja -y

      - name: Install ninja build on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install ninja-build -y

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: start scache server
        if: ${{ matrix.sccache }}
        run: |
          sccache --start-server
        env:
          SCCACHE_BUCKET: "${{ secrets.MINIO_BUCKET_NAME }}"
          SCCACHE_REGION: "${{ secrets.MINIO_REGION }}"
          SCCACHE_ENDPOINT: "${{ secrets.MINIO_ENDPOINT }}"
          SCCACHE_S3_USE_SSL: "false"
          SCCACHE_S3_SERVER_SIDE_ENCRYPTION: "false"
          SCCACHE_S3_KEY_PREFIX: "${{ matrix.os }}-${{ matrix.name }}"
          SCCACHE_LOG: "debug"
          SCCACHE_CONF: '${{ matrix.sccache-conf-path }}'
          AWS_ACCESS_KEY_ID: "${{ secrets.MINIO_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.MINIO_SECRET_ACCESS_KEY }}"
          SCCACHE_IDLE_TIMEOUT: "0"

      - name: Build
        run: |
          make build-example-server CMAKE_EXTRA_FLAGS="${{ matrix.cmake-flags }}"
      
      - name: Pre Package
        run: |
          make pre-package

      - name: Package
        run: |
          make package
      
      - name: Install Python
        if: ${{matrix.run-e2e}}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Run e2e submodule testing
        if: ${{ matrix.run-e2e }}
        run: |
          make run-e2e-submodule-test LLM_MODEL_URL=${{ env.LLM_MODEL_URL }} EMBEDDING_MODEL_URL=${{ env.EMBEDDING_MODEL_URL }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: cortex.llamacpp-${{ matrix.os }}-${{ matrix.name }}
          path: ./cortex.llamacpp

      - name: Clean
        if: always()
        continue-on-error: true
        run: |
          sccache --stop-server
          rm ${{ matrix.sccache-conf-path }}